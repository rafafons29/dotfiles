#!/bin/bash

source "$HOME/.config/hypr/start_scripts/scripts/functions"

# Rutas a los archivos de color que se crearan
THEMES="/home/rafa/.config/colors"
CSS_THEME="/home/rafa/.config/hypr/waybar/colors.css"
ROFI_THEME="/home/rafa/.config/rofi/color.rasi"

# Ruta de los archivos a modificar
MAKO_FILE="$HOME/.config/mako/config"
SWAY_FILE="$HOME/.config/swaylock/config"
KITTY_CONFI_THEME="$HOME/.config/kitty/theme.conf"

# Creamos un mapa para manajar la informacion del json como key, value y las key las almacenasmos en el orden leido
keys=()

# ----------------------------------------------------- 
# Función para convertir hex a rgba
# ----------------------------------------------------- 
transparencia="0.8"
if [[ -n "$2" ]]; then
  transparencia="$2"
fi

hex_to_rgba() {
  local hex=${1#"#"} # Eliminar el símbolo #
  
  [[ ${#hex} -eq 3 ]] && hex="${hex:0:1}${hex:0:1}${hex:1:1}${hex:1:1}${hex:2:1}${hex:2:1}" # Expandir de 3 a 6 caracteres

  local r=$((16#${hex:0:2}))
  local g=$((16#${hex:2:2}))
  local b=$((16#${hex:4:2}))

  echo "rgba($r, $g, $b, $transparencia)"
}

# ----------------------------------------------------- 
# Funciones para formatear archivos
# ----------------------------------------------------- 
css_format() {

  echo "@define-color $1 ${json_content["$1"]};" >> "$CSS_THEME"
}

rofi_format() {
  if [[ "$1" == "bg" ]]; then
    # Al background le damos una transparencia de fondo
    echo "$1: ${json_content["$1"]}BF;" >> $ROFI_THEME
    return
  elif [[ "$1" == "bar-op-bg" ]]; then 
    # No incluimos el valor en rgba en el archivo 
    return
  fi
  
  echo "$1: ${json_content["$1"]}FF;" >> $ROFI_THEME
}

# ----------------------------------------------------- 
# Configuración para swaylock
# ----------------------------------------------------- 
set_sway_content() {
  > $SWAY_FILE

  {
    echo "ignore-empty-password"

    echo "indicator-idle-visible"
    echo "indicator-radius=140"
    echo "indicator-thickness=10"

    echo "line-uses-ring"
    echo "screenshots"
    echo "effect-blur=8x5"
    echo "clock"

    echo "color=${json_content["bg"]}"
    echo "inside-color=${json_content["bg"]}"
    echo "inside-clear-color=${json_content["bg"]}"
    echo "inside-ver-color=${json_content["bg"]}"
    echo "inside-wrong-color=${json_content["bg"]}"
    echo "key-hl-color=${json_content["focus"]}aa"
    echo "bs-hl-color=${json_content["focus"]}aa"
    echo "separator-color=${json_content["inactive"]}55"
    echo "line-color=${json_content["bg"]}"
    echo "text-color=${json_content["active"]}"
    echo "text-clear-color=${json_content["red1"]}"
    echo "text-caps-lock-color=${json_content["yellow"]}"
    echo "text-ver-color=${json_content["focus"]}"
    echo "text-wrong-color=${json_content["red2"]}"
    echo "ring-color=${json_content["bg"]}55"
    echo "ring-ver-color=${json_content["green1"]}"
    echo "ring-clear-color=${json_content["red1"]}11"
    echo "ring-wrong-color=${json_content["red2"]}"
  } > $SWAY_FILE
}

# ----------------------------------------------------- 
# Configuración para mako
# ----------------------------------------------------- 
create_mako_content() { 
  > "$MAKO_FILE"

  {
    # Configuración básica
    echo "sort=-time"
    echo "layer=overlay"
    echo "width=200"
    echo "height=70"
    echo "border-size=0"
    echo "border-radius=5"
    echo "anchor=top-center"
    echo "icons=1"
    echo "max-icon-size=30"
    echo "markup=1"
    echo "default-timeout=1500"
    echo "ignore-timeout=1"
    echo "font=VictorMono NF Italic 12"

    echo "background-color=${json_content["black6"]}"
    echo "border-color=${json_content["focus"]}"
    echo "progress-color=over ${json_content["focus"]}88"

    echo "[urgency=low]"
    echo "border-color=${json_content["bg"]}"
    echo "text-color=${json_content["focus"]}"

    echo "[urgency=normal]"
    echo "border-color=${json_content["focus"]}"
    echo "text-color=${json_content["active"]}"

    echo "[urgency=high]"
    echo "border-color=${json_content["red2"]}"
    echo "text-color=${json_content["red2"]}"

  } >> "$MAKO_FILE"

  makoctl reload  # Hacemos que mako se reinicie y se actualicen los cambios
}

# ----------------------------------------------------- 
# Configuración para kitty
# ----------------------------------------------------- 
reload_all_kitty_instance() {
  local socket_dir="/tmp"

  for socket in "$socket_dir"/mykitty-*; do
    if [ -S "$socket" ]; then
      socket_number=$(basename "$socket" | sed 's/mykitty-//')
      if ! kitty @ --to unix:"$socket" load-config; then
        continue
      fi
    fi
  done
}

create_kitty_theme() {
  > "$KITTY_CONFI_THEME"

  {
    # Configuración básica
    echo "background_opacity $transparencia"
    echo "cursor ${json_content["focus"]}"
    echo "foreground ${json_content["active"]}"
    echo "background ${json_content["kitty-bg"]}"

    echo "active_tab_foreground ${json_content["bg"]}"
    echo "active_tab_background ${json_content["focus"]}"
    echo "active_tab_font_style italic"
    echo "active_border_color ${json_content["focus"]}"

    echo "inactive_tab_foreground ${json_content["inactive-tab-fg"]}"
    echo "inactive_tab_background ${json_content["inactive-tab-bg"]}"
    echo "inactive_tab_font_style normal"
    echo "inactive_border_color ${json_content["inactive-tab-bg"]}"

    echo "tab_bar_background ${json_content["bar-bg"]}"

    # Colores adicionales
    echo "#: black"
    echo "color0 ${json_content["black1"]}"
    echo "color8 ${json_content["black2"]}"

    echo "#: red"
    echo "color1 ${json_content["red3"]}"
    echo "color9 ${json_content["red4"]}"

    echo "#: green"
    echo "color2 ${json_content["green3"]}"
    echo "color10 ${json_content["green4"]}"

    echo "#: yellow"
    echo "color3 ${json_content["yellow"]}"
    echo "color11 ${json_content["yellow1"]}"

    echo "#: blue"
    echo "color4 ${json_content["blue3"]}"
    echo "color12 ${json_content["blue4"]}"

    echo "#: magenta"
    echo "color5 ${json_content["magneta1"]}"
    echo "color13 ${json_content["magneta2"]}"

    echo "#: cyan"
    echo "color6 ${json_content["cyan1"]}"
    echo "color14 ${json_content["cyan2"]}"

    echo "#: white"
    echo "color7 ${json_content["white1"]}"
    echo "color15 ${json_content["white2"]}"

  } >> "$KITTY_CONFI_THEME"

  reload_all_kitty_instance
}
# ----------------------------------------------------- 
# Crear archivos de tema
# ----------------------------------------------------- 
create_file_theme() {
  > "$CSS_THEME" # Limpiar el archivo css para llenarlo todo de nuevo
  echo "* {" > $ROFI_THEME

  for clave in "${keys[@]}"; do
    css_format $clave
    rofi_format $clave
  done

  echo "}" >> $ROFI_THEME
}

json_content=()
read_json "$THEMES/$1.json"

create_file_theme # Creamos tanto el archivo css como el de rofi
set_sway_content  # Modificamos el archivo para swaylock
create_mako_content # Modificamos el archivo de mako para establecer el nuevo tema
create_kitty_theme # Modificamos el archivo de colores de kitty para establecer el nuevo tema
