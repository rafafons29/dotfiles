#!/bin/bash

source $HOME/.config/hypr/start_scripts/scripts/functions

CONFIG_FILE="$HOME/.config/hypr/start_scripts/scripts/waybar_start_config_var/config_last_used.json"

declare -A json_content
declare -A paths=(
  ["top"]="$HOME/.config/hypr/waybar/top"
  ["buttom"]="$HOME/.config/hypr/waybar/buttom"
  ["newtop"]="$HOME/.config/hypr/waybar/newtop"
  ["transparenttop"]="$HOME/.config/hypr/waybar/transparenttop"
)

transparent_value="0.5"

set_paths() {
  local theme_bar="${1:2}"

  if [[ -n "${paths[$theme_bar]}" ]]; then
    CONFIG="${paths[$theme_bar]}/config.jsonc"
    STYLE="${paths[$theme_bar]}/style.css"
  else 
    handle_error "Parámetro no válido: $theme_bar"
  fi
}

set_themebar_is_good() {
  case ${THEME_BAR:2} in
    top | buttom | newtop | transparenttop) set_paths "$THEME_BAR" ;;
  *) handle_error "Tema no válido: $THEME_BAR";;
  esac
}

set_waybar_position() {
  read_json "$CONFIG"

  local key="$1"
  local value="$2"

  if [[ -n "${json_content["$key"]}" ]]; then # Comprobamos que el value existe
    jq --arg key "$key" --arg value "$value" \
      '(.[$key]) = $value' "$CONFIG" | sponge "$CONFIG" # El comando sponge se encuentra en el paquete moreutils
    save_json "$key" "$value"
  else 
    echo "La clave '$key' no existe."
  fi
}

show_waybar() {
  waybar --bar main-bar --log-level error --config ${CONFIG} --style ${STYLE}
}

main() {
  if [ "$#" -eq 0 ]; then 
    # Caso en el que no se hayan pasado parametros
    # "$HOME/.config/hypr/start_scripts/scripts/theme" $COLOR
    if [[ "${THEME_BAR:2}" == "transparenttop" ]]; then
      $HOME/.config/hypr/start_scripts/scripts/theme $COLOR "$transparent_value"
    else 
      $HOME/.config/hypr/start_scripts/scripts/theme $COLOR
    fi
    set_themebar_is_good
    show_waybar
    return
  elif [ "${1:2}" == "hs" ]; then 
    if pgrep -x "waybar"; then 
      killall waybar
      return
    fi
    
    set_themebar_is_good
    show_waybar
  else 
    local reload="${1:2}"
    local theme_bar="${2:2}"
    local theme_color="$3"
    local position="$4"

    if [[ $reload == "reload" ]]; then 
      # Caso en el que haremos un reload de waybar
      pkill waybar || true
    fi

    if [[ $theme_bar =~ ^(top|buttom|newtop|transparenttop)$ && $theme_color =~ ^(andromeda|andromeda_colorizer|carbonfox|catppucin|onedark|oxocarbon|palenight|tokyonight) && $position =~ ^(top|bottom) ]]; then 
      set_paths $2
      save_json bar $2
      save_json color $3
      set_waybar_position position $4
      if [[ "$theme_bar" == "transparenttop" ]]; then
        $HOME/.config/hypr/start_scripts/scripts/theme $3 "$transparent_value"
      else 
        $HOME/.config/hypr/start_scripts/scripts/theme $3
      fi
      $HOME/.config/hypr/start_scripts/scripts/set_all_themes $3
      notify-send "Theme" "Theme $3 theme successfully set"
    elif [[ $theme_bar =~ "" && $theme_color =~ "" && $position =~ "" ]]; then
      set_themebar_is_good
      save_json bar $THEME_BAR
      save_json color $COLOR
      set_waybar_position position $POSITION
    else 
      handle_error "Parametro no valido para la posicion de la barra"
    fi
    
    show_waybar
  fi
}

read_previous_config 
main "$@"
