#!/bin/bash

CONFIG_FILE="$HOME/.config/hypr/start_scripts/scripts/waybar_start_config_var/config_last_used.json"
THEME_BAR=""
COLOR=""
POSITION=""

declare -A json_content

read_json() {
  # Leer el arvhivo y extraer las claves y valores
  while IFS=": " read -r clave valor; do
    # Limpiar comillas y espacios
    clave=$(echo "$clave" | tr -d '\" ' | sed 's/,$//')
    valor=$(echo "$valor" | tr -d '\" ,')

    # Cuando la clave sea bg ese valor se lleva y se almacena en rgba 
    if [[ $clave == "bg" ]]; then
      keys+=("bar-op-bg")
      json_content["bar-op-bg"]=$(hex_to_rgba "$valor")
    fi

    # Se almacenan los valores en exadecimal
    keys+=("$clave")
    json_content["$clave"]="$valor"

  done < <(grep -o '"[^"]*": *"[^"]*"' "$1")
}

read_previous_config() {
  # Comprobadndo que el archivo no esta vacio
  if [[ -f "$CONFIG_FILE" ]]; then 
    read_json "$CONFIG_FILE"
    THEME_BAR="${json_content["bar"]}"
    COLOR="${json_content["color"]}"
    POSITION="${json_content["position"]}"
  else
     THEME_BAR="No se han encontrado configuraciones anteriores. Por fabor especifique 'top' o 'bottom'."
  fi
}

save_json() {
  if [[ -n "${json_content["$1"]}" ]]; then # Comprobamos que el value existe
    jq --arg key "$1" --arg value "$2" \
      '(.[$key]) = $value' "$CONFIG_FILE" > tmp.$$.json 

    if [[ $? -eq 0 ]]; then
      mv tmp.$$.json "$CONFIG_FILE"
    else 
      rm tmp.$$.json
    fi
  else 
    echo "La clave '$1' no existe."
  fi
}

send_notification() {
  read_json "$CONFIG_FILE"

  local message="$1"
  local body="$2"
  local icon="$3"
  local urgency="${4:-normal}"
  local notify_id="${json_content["notify_id"]}"

  if [[ -n $notify_id ]]; then
    notify_id=$(notify-send -u $urgency -r $notify_id -p "$message" "$body" -i $icon)
  else 
    notify_id=$(notify-send -u $urgency -i $icon -p "$message" "$body")
  fi

  save_json notify_id $notify_id
}

handle_error() {
  echo "$1" >&2
  exit 1
}
